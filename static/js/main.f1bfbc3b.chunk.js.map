{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","TodoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","undoneTasks","className","length","Remove","CheckCircle","props","css","Text","TodoItemBlock","TodoItem","onClick","TodoListBlock","TodoList","todos","React","memo","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1bfbc3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: #FFF;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0,0,0,0.04);\r\n\r\n    margin:0 auto;\r\n\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n`;\r\n\r\nfunction TodoTemplate({children}) {\r\n  return (<TodoTemplateBlock>\r\n      {children}\r\n  </TodoTemplateBlock>);\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import React, { useReducer, createContext, useContext, useRef } from \"react\";\r\n\r\nconst initialTodos = [\r\n  {\r\n    id: 1,\r\n    text: \"자신감 가지기!\",\r\n    done: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"TodoList 만들어보기\",\r\n    done: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"리액트 API연동 강의 수강\",\r\n    done: false,\r\n  },\r\n];\r\n\r\n/*\r\n    CREATE\r\n    TOGGLE\r\n    REMOVE\r\n*/\r\n\r\nfunction TodoReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CREATE\":\r\n      // TodoCreate.js에서 dispatch로 만든 action.todo\r\n      return state.concat(action.todo);\r\n    case \"TOGGLE\":\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n      );\r\n    case \"REMOVE\":\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type:${action.type}`);\r\n  }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = useReducer(TodoReducer, initialTodos);\r\n  const nextId = useRef(4);\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = useContext(TodoStateContext);\r\n  if (!context) {\r\n    throw new Error(\"Cannot find TodoProvider\");\r\n  }\r\n  return context;\r\n}\r\nexport function useTodoDispatch() {\r\n  return useContext(TodoDispatchContext);\r\n}\r\nexport function useTodoNextId() {\r\n  return useContext(TodoNextIdContext);\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n   border-bottom: 1px solid #e9ecef;\r\n   h1{\r\n       font-size: 28px;\r\n       color: #a61e4d;\r\n       margin: 0;\r\n   }\r\n   .day {\r\n       margin-top: 4px;\r\n       color: #868e96;\r\n       font-size: 20px;\r\n   }\r\n   .tasks-left {\r\n       color: #f783ac;\r\n       font-size: 16px;\r\n       margin-top:40px;\r\n       font-weight: bold;\r\n   }\r\n`;\r\n\r\n\r\nfunction TodoHead() {\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n\r\n    const dayName = today.toLocaleDateString('ko-KR', {\r\n        weekday:'long'\r\n    });\r\n\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n    return (<TodoHeadBlock>\r\n      <h1>수민이의 {dateString} 일정 </h1>\r\n      <div className=\"day\">벌써 {dayName} 이야</div>\r\n      <div className=\"tasks-left\">오늘 할 일이 {undoneTasks.length}개 남았어요 :)</div>\r\n  </TodoHeadBlock>);\r\n}\r\n\r\nexport default TodoHead;\r\n\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\"; // 이거 아이콘 받아온거임\r\nimport { useTodoDispatch } from \"../TodoContext\";\r\n\r\nconst Remove = styled.div`\r\n    opacity: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover{\r\n        color: #e719d6;\r\n        \r\n    }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props => props.done && css`\r\n        border:1px solid red;\r\n        color: #e64980;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${(props) => props.done && css`\r\n        color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover{\r\n        ${Remove}{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction TodoItem({id, text, done}) {\r\n  const dispatch = useTodoDispatch();\r\n  const onToggle = () => {\r\n      dispatch({\r\n          type:'TOGGLE',\r\n          id,\r\n      });\r\n  };\r\n  const onDelete = () => {\r\n      dispatch({\r\n        type:'REMOVE',\r\n        id,\r\n      });\r\n  };\r\n  return (\r\n  <TodoItemBlock>\r\n    <CheckCircle onClick={onToggle} done={done}>\r\n        {done && <MdDone />}\r\n    </CheckCircle>\r\n    <Text done={done}>\r\n        {text}\r\n    </Text>\r\n    <Remove onClick={onDelete}>\r\n        <MdDelete/>\r\n    </Remove>\r\n  </TodoItemBlock>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex:1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n  return (\r\n  <TodoListBlock>\r\n      {todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            id = {todo.id}\r\n            done={todo.done}\r\n            text={todo.text}\r\n          />\r\n      ))}\r\n\r\n  </TodoListBlock>);\r\n}\r\n\r\nexport default React.memo(TodoList);\r\n\r\n","import React, {useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport {MdAdd} from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n    background: #f783ac;\r\n\r\n    &:hover{\r\n        background: #fcc2d7;\r\n    }\r\n    &:active {\r\n        background: #f06595;\r\n    }\r\n\r\n    z-index:5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: block;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 60px;\r\n\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n    \r\n    font-size: 60px;\r\n    color: white;\r\n    border-radius: 40px;\r\n    \r\n    border:none;\r\n    outline: none;\r\n\r\n    transition: 0.125s all ease-in;\r\n    // 버튼이 눌린상태\r\n    ${props => props.open && css`\r\n        background: #ff6b6b;\r\n        &:hover {\r\n            background: #ff8787;\r\n        }\r\n        &:active {\r\n            background: #fa5252;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const onToggle = () => setOpen(!open);\r\n\r\n    const onChange = e => setValue(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n\r\n    const nextId = useTodoNextId();\r\n    const dispatch = useTodoDispatch();\r\n\r\n  return (\r\n  <>\r\n    {open &&\r\n    <InsertFormPositioner>\r\n        <InsertForm onSubmit={onSubmit}>\r\n            <Input placeholder=\"오늘은 뭐할건가요? enter로 추가해주세요.\" autoFocus value={value} onChange={onChange}/>\r\n        </InsertForm>\r\n    </InsertFormPositioner>}\r\n    <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd/>\r\n    </CircleButton>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoCreate);\r\n\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport { TodoProvider } from \"./TodoContext\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #fff0f6;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}